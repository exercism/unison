[
  {
    "name": "Stating something",
    "test_code": "let\n  Test.label.deprecated \"Stating something\" <| Test.expect (response \"Tom-ay-to, tom-aaaah-to.\" === \"Whatever.\")"
  },
  {
    "name": "Shouting",
    "test_code": "let\n  Test.label.deprecated \"Shouting\" <| Test.expect (response \"WATCH OUT!\" === \"Whoa, chill out!\")"
  },
  {
    "name": "Shouting gibberish",
    "test_code": "let\n  Test.label.deprecated \"Shouting gibberish\" <| Test.expect (response \"FCECDFCAAB\" === \"Whoa, chill out!\")"
  },
  {
    "name": "Asking a question",
    "test_code": "let\n  Test.label.deprecated \"Asking a question\" <| Test.expect (response \"Does this cryogenic chamber make me look fat?\" === \"Sure.\")"
  },
  {
    "name": "Asking a numeric question",
    "test_code": "let\n  Test.label.deprecated \"Asking a numeric question\" <| Test.expect (response \"You are, what, like 15?\" === \"Sure.\")"
  },
  {
    "name": "Asking gibberish",
    "test_code": "let\n  Test.label.deprecated \"Asking gibberish\" <| Test.expect (response \"fffbbcbeab?\" === \"Sure.\")"
  },
  {
    "name": "Talking forcefully",
    "test_code": "let\n  Test.label.deprecated \"Talking forcefully\" <| Test.expect (response \"Hi there!\" === \"Whatever.\")"
  },
  {
    "name": "Using acronyms in regular speech",
    "test_code": "let\n  Test.label.deprecated \"Using acronyms in regular speech\" <| Test.expect (response \"It's OK if you don't want to go work for NASA.\" === \"Whatever.\")"
  },
  {
    "name": "Forceful question",
    "test_code": "let\n  Test.label.deprecated \"Forceful question\" <| Test.expect (response \"WHAT'S GOING ON?\" === \"Calm down, I know what I'm doing!\")"
  },
  {
    "name": "Shouting numbers",
    "test_code": "let\n  Test.label.deprecated \"Shouting numbers\" <| Test.expect (response \"1, 2, 3 GO!\" === \"Whoa, chill out!\")"
  },
  {
    "name": "No letters",
    "test_code": "let\n  Test.label.deprecated \"No letters\" <| Test.expect (response \"1, 2, 3\" === \"Whatever.\")"
  },
  {
    "name": "Question with no letters",
    "test_code": "let\n  Test.label.deprecated \"Question with no letters\" <| Test.expect (response \"4?\" === \"Sure.\")"
  },
  {
    "name": "Shouting with special characters",
    "test_code": "let\n  Test.label.deprecated \"Shouting with special characters\" <| Test.expect (response \"ZOMG THE %^*@#$(*^ ZOMBIES ARE COMING!!11!!1!\" === \"Whoa, chill out!\")"
  },
  {
    "name": "Shouting with no exclamation mark",
    "test_code": "let\n  Test.label.deprecated \"Shouting with no exclamation mark\" <| Test.expect (response \"I HATE THE DENTIST\" === \"Whoa, chill out!\")"
  },
  {
    "name": "Statement containing question mark",
    "test_code": "let\n  Test.label.deprecated \"Statement containing question mark\" <| Test.expect (response \"Ending with ? means a question.\" === \"Whatever.\")"
  },
  {
    "name": "Non-letters with question",
    "test_code": "let\n  Test.label.deprecated \"Non-letters with question\" <| Test.expect (response \":) ?\" === \"Sure.\")"
  },
  {
    "name": "Prattling on",
    "test_code": "let\n  Test.label.deprecated \"Prattling on\" <| Test.expect (response \"Wait! Hang on. Are you going to be OK?\" === \"Sure.\")"
  },
  {
    "name": "Silence",
    "test_code": "let\n  Test.label.deprecated \"Silence\" <| Test.expect (response \"\" === \"Fine. Be that way!\")"
  },
  {
    "name": "Prolonged silence",
    "test_code": "let\n  Test.label.deprecated \"Prolonged silence\" <| Test.expect (response \"          \" === \"Fine. Be that way!\")"
  },
  {
    "name": "Alternate silence",
    "test_code": "let\n  Test.label.deprecated \"Alternate silence\" <| Test.expect (response \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\" === \"Fine. Be that way!\")"
  },
  {
    "name": "Multiple line question",
    "test_code": "let\n  Test.label.deprecated \"Multiple line question\" <| Test.expect (response \"\\nDoes this cryogenic chamber make me look fat?\\nNo.\" === \"Whatever.\")"
  },
  {
    "name": "Starting with whitespace",
    "test_code": "let\n  Test.label.deprecated \"Starting with whitespace\" <| Test.expect (response \"         hmmmmmmm...\" === \"Whatever.\")"
  },
  {
    "name": "Ending with whitespace",
    "test_code": "let\n  Test.label.deprecated \"Ending with whitespace\" <| Test.expect (response \"Okay if like my  spacebar  quite a bit?   \" === \"Sure.\")"
  },
  {
    "name": "Other whitespace",
    "test_code": "let\n  Test.label.deprecated \"Other whitespace\" <| Test.expect (response \"\\n\\r \\t\" === \"Fine. Be that way!\")"
  },
  {
    "name": "Non-question ending with whitespace",
    "test_code": "let\n  Test.label.deprecated \"Non-question ending with whitespace\" <| Test.expect (response \"This is a statement ending with whitespace      \" === \"Whatever.\")"
  }
]