[
  {
    "name": "empty lists",
    "test_code": "let\n  Test.label.deprecated \"empty lists\" <| Test.expect (sublist [] [] === Equal)"
  },
  {
    "name": "empty list within non empty list",
    "test_code": "let\n  Test.label.deprecated \"empty list within non empty list\" <| Test.expect (sublist [] [1,2,3] === Sublist)"
  },
  {
    "name": "non empty list contains empty list",
    "test_code": "let\n  Test.label.deprecated \"non empty list contains empty list\" <| Test.expect (sublist [1,2,3] [] === Superlist)"
  },
  {
    "name": "list equals itself",
    "test_code": "let\n  Test.label.deprecated \"list equals itself\" <| Test.expect (sublist [1,2,3] [1,2,3] === Equal)"
  },
  {
    "name": "different lists",
    "test_code": "let\n  Test.label.deprecated \"different lists\" <| Test.expect (sublist [1,2,3] [2,3,4] === Unequal)"
  },
  {
    "name": "false start",
    "test_code": "let\n  Test.label.deprecated \"false start\" <| Test.expect (sublist [1,2,5] [0,1,2,3,1,2,5,6] === Sublist)"
  },
  {
    "name": "consecutive",
    "test_code": "let\n  Test.label.deprecated \"consecutive\" <| Test.expect (sublist [1,1,2] [0,1,1,1,2,1,2] === Sublist)"
  },
  {
    "name": "sublist at start",
    "test_code": "let\n  Test.label.deprecated \"sublist at start\" <| Test.expect (sublist [0,1,2] [0,1,2,3,4,5] === Sublist)"
  },
  {
    "name": "sublist in middle",
    "test_code": "let\n  Test.label.deprecated \"sublist in middle\" <| Test.expect (sublist [2,3,4] [0,1,2,3,4,5] === Sublist)"
  },
  {
    "name": "sublist at end",
    "test_code": "let\n  Test.label.deprecated \"sublist at end\" <| Test.expect (sublist [3,4,5] [0,1,2,3,4,5] === Sublist)"
  },
  {
    "name": "at start of superlist",
    "test_code": "let\n  Test.label.deprecated \"at start of superlist\" <| Test.expect (sublist [0,1,2,3,4,5] [0,1,2] === Superlist)"
  },
  {
    "name": "in middle of superlist",
    "test_code": "let\n  Test.label.deprecated \"in middle of superlist\" <| Test.expect (sublist [0,1,2,3,4,5] [2,3] === Superlist)"
  },
  {
    "name": "at end of superlist",
    "test_code": "let\n  Test.label.deprecated \"at end of superlist\" <| Test.expect (sublist [0,1,2,3,4,5] [3,4,5] === Superlist)"
  },
  {
    "name": "first list missing element from second list",
    "test_code": "let\n  Test.label.deprecated \"first list missing element from second list\" <| Test.expect (sublist [1,3] [1,2,3] === Unequal)"
  },
  {
    "name": "second list missing element from first list",
    "test_code": "let\n  Test.label.deprecated \"second list missing element from first list\" <| Test.expect (sublist [1,2,3] [1,3] === Unequal)"
  },
  {
    "name": "first list missing additional digits from second list",
    "test_code": "let\n  Test.label.deprecated \"first list missing additional digits from second list\" <| Test.expect (sublist [1,2] [1,22] === Unequal)"
  },
  {
    "name": "order matters to a list",
    "test_code": "let\n  Test.label.deprecated \"order matters to a list\" <| Test.expect (sublist [1,2,3] [3,2,1] === Unequal)"
  },
  {
    "name": "same digits but different numbers",
    "test_code": "let\n  Test.label.deprecated \"same digits but different numbers\" <| Test.expect (sublist [1,0,1] [10,1] === Unequal)"
  }
]