[
  {
    "name": "Empty string",
    "test_code": "let\n  Test.label.deprecated \"Empty string\" <| Test.expect (isIsogram \"\" === true)"
  },
  {
    "name": "Isogram with only lower case characters",
    "test_code": "let\n  Test.label.deprecated \"Isogram with only lower case characters\" <| Test.expect (isIsogram \"isogram\" === true)"
  },
  {
    "name": "Word with one duplicated character",
    "test_code": "let\n  Test.label.deprecated \"Word with one duplicated character\" <| Test.expect (isIsogram \"eleven\" === false)"
  },
  {
    "name": "Word with one duplicated character from the end of the alphabet",
    "test_code": "let\n  Test.label.deprecated \"Word with one duplicated character from the end of the alphabet\" <| Test.expect (isIsogram \"zzyzx\" === false)"
  },
  {
    "name": "Longest reported english isogram",
    "test_code": "let\n  Test.label.deprecated \"Longest reported english isogram\" <| Test.expect (isIsogram \"subdermatoglyphic\" === true)"
  },
  {
    "name": "Word with duplicated character in mixed case",
    "test_code": "let\n  Test.label.deprecated \"Word with duplicated character in mixed case\" <| Test.expect (isIsogram \"Alphabet\" === false)"
  },
  {
    "name": "Word with duplicated character in mixed case, lowercase first",
    "test_code": "let\n  Test.label.deprecated \"Word with duplicated character in mixed case, lowercase first\" <| Test.expect (isIsogram \"alphAbet\" === false)"
  },
  {
    "name": "Hypothetical isogrammic word with hyphen",
    "test_code": "let\n  Test.label.deprecated \"Hypothetical isogrammic word with hyphen\" <| Test.expect (isIsogram \"thumbscrew-japingly\" === true)"
  },
  {
    "name": "Hypothetical word with duplicated character following hyphen",
    "test_code": "let\n  Test.label.deprecated \"Hypothetical word with duplicated character following hyphen\" <| Test.expect (isIsogram \"thumbscrew-jappingly\" === false)"
  },
  {
    "name": "Isogram with duplicated hyphen",
    "test_code": "let\n  Test.label.deprecated \"Isogram with duplicated hyphen\" <| Test.expect (isIsogram \"six-year-old\" === true)"
  },
  {
    "name": "Made-up name that is an isogram",
    "test_code": "let\n  Test.label.deprecated \"Made-up name that is an isogram\" <| Test.expect (isIsogram \"Emily Jung Schwartzkopf\" === true)"
  },
  {
    "name": "Duplicated character in the middle",
    "test_code": "let\n  Test.label.deprecated \"Duplicated character in the middle\" <| Test.expect (isIsogram \"accentor\" === false)"
  },
  {
    "name": "Same first and last characters",
    "test_code": "let\n  Test.label.deprecated \"Same first and last characters\" <| Test.expect (isIsogram \"angola\" === false)"
  },
  {
    "name": "Word with duplicated character and with two hyphens",
    "test_code": "let\n  Test.label.deprecated \"Word with duplicated character and with two hyphens\" <| Test.expect (isIsogram \"up-to-date\" === false)"
  }
]