[
  {
    "name": "leap should be false when year is not divisible by 4",
    "test_code": "Test.label.deprecated \"leap should be false when year is not divisible by 4\" (Test.expect ((leap 2015) === false))"
  },
  {
    "name": "leap should be false when year is divisible by 2 not divisible by 4",
    "test_code": "Test.label.deprecated \"leap should be false when year is divisible by 2 not divisible by 4\" (Test.expect ((leap 1970) === false))"
  },
  {
    "name": "leap should be true when year is divisible by 4",
    "test_code": "Test.label.deprecated \"leap should be true when year is divisible by 4\" (Test.expect ((leap 1964) === true))"
  },
  {
    "name": "leap should be true when year divisible by 4, not divisible by 100",
    "test_code": "Test.label.deprecated \"leap should be true when year divisible by 4, not divisible by 100\" (Test.expect ((leap 1996)=== true))"
  },
  {
    "name": "leap should be true when year divisible by 4 and 5",
    "test_code": "Test.label.deprecated \"leap should be true when year divisible by 4 and 5\" (Test.expect ((leap 1960)=== true))"
  },
  {
    "name": "leap should be false when year divisible by 100, not divisible by 400",
    "test_code": "Test.label.deprecated \"leap should be false when year divisible by 100, not divisible by 400\" (Test.expect ((leap 2100)=== false))"
  },
  {
    "name": "leap should be true when year divisible by 400 and 100",
    "test_code": "Test.label.deprecated \"leap should be true when year divisible by 400 and 100\" (Test.expect ((leap 2000) === true))"
  },
  {
    "name": "leap should be false when year divisible by 4 and 100",
    "test_code": "Test.label.deprecated \"leap should be false when year divisible by 4 and 100\" (Test.expect ((leap 1900) === false))"
  },
  {
    "name": "leap should be false when year divisible by 200, not divisble by 400",
    "test_code": "Test.label.deprecated \"leap should be false when year divisible by 200, not divisble by 400\" (Test.expect ((leap 1800) === false))"
  }
]