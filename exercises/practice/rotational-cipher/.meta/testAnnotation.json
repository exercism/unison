[
  {
    "name": "rotate a by 0, same output as input",
    "test_code": "let\n  Test.label.deprecated \"rotate a by 0, same output as input\" <| Test.expect (rotate \"a\" 0 === \"a\")"
  },
  {
    "name": "rotate a by 1",
    "test_code": "let\n  Test.label.deprecated \"rotate a by 1\" <| Test.expect (rotate \"a\" 1 === \"b\")"
  },
  {
    "name": "rotate a by 26, same output as input",
    "test_code": "let\n  Test.label.deprecated \"rotate a by 26, same output as input\" <| Test.expect (rotate \"a\" 26 === \"a\")"
  },
  {
    "name": "rotate m by 13",
    "test_code": "let\n  Test.label.deprecated \"rotate m by 13\" <| Test.expect (rotate \"m\" 13 === \"z\")"
  },
  {
    "name": "rotate n by 13 with wrap around alphabet",
    "test_code": "let\n  Test.label.deprecated \"rotate n by 13 with wrap around alphabet\" <| Test.expect (rotate \"n\" 13 === \"a\")"
  },
  {
    "name": "rotate capital letters",
    "test_code": "let\n  Test.label.deprecated \"rotate capital letters\" <| Test.expect (rotate \"OMG\" 5 === \"TRL\")"
  },
  {
    "name": "rotate spaces",
    "test_code": "let\n  Test.label.deprecated \"rotate spaces\" <| Test.expect (rotate \"O M G\" 5 === \"T R L\")"
  },
  {
    "name": "rotate numbers",
    "test_code": "let\n  Test.label.deprecated \"rotate numbers\" <| Test.expect (rotate \"Testing 1 2 3 testing\" 4 === \"Xiwxmrk 1 2 3 xiwxmrk\")"
  },
  {
    "name": "rotate punctuation",
    "test_code": "let\n  Test.label.deprecated \"rotate punctuation\" <| Test.expect (rotate \"Let's eat, Grandma!\" 21 === \"Gzo'n zvo, Bmviyhv!\")"
  },
  {
    "name": "rotate all letters",
    "test_code": "let\n  Test.label.deprecated \"rotate all letters\" <| Test.expect (rotate \"The quick brown fox jumps over the lazy dog.\" 13 === \"Gur dhvpx oebja sbk whzcf bire gur ynml qbt.\")"
  }
]