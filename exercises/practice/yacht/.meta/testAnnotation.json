[
  {
    "name": "Yacht",
    "test_code": "expect (50 == yacht.yacht Yacht [5, 5, 5, 5, 5])\n    |> Test.label.deprecated \"Yacht\""
  },
  {
    "name": "Not Yacht",
    "test_code": "expect (0 == yacht.yacht Yacht [1, 3, 3, 2, 5])\n    |> Test.label.deprecated \"Not Yacht\""
  },
  {
    "name": "Ones",
    "test_code": "expect (3 == yacht.yacht Ones [1, 1, 1, 3, 5])\n    |> Test.label.deprecated \"Ones\""
  },
  {
    "name": "Ones, out of order",
    "test_code": "expect (3 == yacht.yacht Ones [3, 1, 1, 5, 1])\n    |> Test.label.deprecated \"Ones, out of order\""
  },
  {
    "name": "No ones",
    "test_code": "expect (0 == yacht.yacht Ones [4, 3, 6, 5, 5])\n    |> Test.label.deprecated \"No ones\""
  },
  {
    "name": "Twos",
    "test_code": "expect (2 == yacht.yacht Twos [2, 3, 4, 5, 6])\n    |> Test.label.deprecated \"Twos\""
  },
  {
    "name": "Fours",
    "test_code": "expect (8 == yacht.yacht Fours [1, 4, 1, 4, 1])\n    |> Test.label.deprecated \"Fours\""
  },
  {
    "name": "Yacht counted as threes",
    "test_code": "expect (15 == yacht.yacht Threes [3, 3, 3, 3, 3])\n    |> Test.label.deprecated \"Yacht counted as threes\""
  },
  {
    "name": "Yacht of 3s counted as fives",
    "test_code": "expect (0 == yacht.yacht Fives [3, 3, 3, 3, 3])\n    |> Test.label.deprecated \"Yacht of 3s counted as fives\""
  },
  {
    "name": "Fives",
    "test_code": "expect (10 == yacht.yacht Fives [1, 5, 3, 5, 3])\n    |> Test.label.deprecated \"Fives\""
  },
  {
    "name": "Sixes",
    "test_code": "expect (6 == yacht.yacht Sixes [2, 3, 4, 5, 6])\n    |> Test.label.deprecated \"Sixes\""
  },
  {
    "name": "Full house two small, three big",
    "test_code": "expect (16 == yacht.yacht FullHouse [2, 2, 4, 4, 4])\n    |> Test.label.deprecated \"Full house two small, three big\""
  },
  {
    "name": "Full house three small, two big",
    "test_code": "expect (19 == yacht.yacht FullHouse [5, 3, 3, 5, 3])\n    |> Test.label.deprecated \"Full house three small, two big\""
  },
  {
    "name": "Two pair is not a full house",
    "test_code": "expect (0 == yacht.yacht FullHouse [2, 2, 4, 4, 5])\n    |> Test.label.deprecated \"Two pair is not a full house\""
  },
  {
    "name": "Four of a kind is not a full house",
    "test_code": "expect (0 == yacht.yacht FullHouse [1, 4, 4, 4, 4])\n    |> Test.label.deprecated \"Four of a kind is not a full house\""
  },
  {
    "name": "Yacht is not a full house",
    "test_code": "expect (0 == yacht.yacht FullHouse [2, 2, 2, 2, 2])\n    |> Test.label.deprecated \"Yacht is not a full house\""
  },
  {
    "name": "Four of a Kind",
    "test_code": "expect (24 == yacht.yacht FourOfAKind [6, 6, 4, 6, 6])\n    |> Test.label.deprecated \"Four of a Kind\""
  },
  {
    "name": "Yacht can be scored as Four of a Kind",
    "test_code": "expect (12 == yacht.yacht FourOfAKind [3, 3, 3, 3, 3])\n    |> Test.label.deprecated \"Yacht can be scored as Four of a Kind\""
  },
  {
    "name": "Full house is not Four of a Kind",
    "test_code": "expect (0 == yacht.yacht FourOfAKind [3, 3, 3, 5, 5])\n    |> Test.label.deprecated \"Full house is not Four of a Kind\""
  },
  {
    "name": "Little Straight",
    "test_code": "expect (30 == yacht.yacht LittleStraight [3, 5, 4, 1, 2])\n    |> Test.label.deprecated \"Little Straight\""
  },
  {
    "name": "Little Straight as Big Straight",
    "test_code": "expect (0 == yacht.yacht BigStraight [1, 2, 3, 4, 5])\n    |> Test.label.deprecated \"Little Straight as Big Straight\""
  },
  {
    "name": "Four in order but not a little straight",
    "test_code": "expect (0 == yacht.yacht LittleStraight [1, 1, 2, 3, 4])\n    |> Test.label.deprecated \"Four in order but not a little straight\""
  },
  {
    "name": "No pairs but not a little straight",
    "test_code": "expect (0 == yacht.yacht LittleStraight [1, 2, 3, 4, 6])\n    |> Test.label.deprecated \"No pairs but not a little straight\""
  },
  {
    "name": "Minimum is 1, maximum is 5, but not a little straight",
    "test_code": "expect (0 == yacht.yacht LittleStraight [1, 1, 3, 4, 5])\n    |> Test.label.deprecated \"Minimum is 1, maximum is 5, but not a little straight\""
  },
  {
    "name": "Big Straight",
    "test_code": "expect (30 == yacht.yacht BigStraight [4, 6, 2, 5, 3])\n    |> Test.label.deprecated \"Big Straight\""
  },
  {
    "name": "Big Straight as little straight",
    "test_code": "expect (0 == yacht.yacht LittleStraight [6, 5, 4, 3, 2])\n    |> Test.label.deprecated \"Big Straight as little straight\""
  },
  {
    "name": "No pairs but not a big straight",
    "test_code": "expect (0 == yacht.yacht BigStraight [6, 5, 4, 3, 1])\n    |> Test.label.deprecated \"No pairs but not a big straight\""
  },
  {
    "name": "Choice",
    "test_code": "expect (23 == yacht.yacht Choice [3, 3, 5, 6, 6])\n    |> Test.label.deprecated \"Choice\""
  },
  {
    "name": "Yacht as choice",
    "test_code": "expect (10 == yacht.yacht Choice [2, 2, 2, 2, 2])\n    |> Test.label.deprecated \"Yacht as choice\""
  }
]