largestSeriesProduct.test.ex1 = verify do
  labeled "Finds the largest product if span equals length" do
    digits = "29"
    span = +2
    expected = Some 18
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex2 = verify do
  labeled "Can find the largest product of 2 with numbers in order" do
    digits = "0123456789"
    span = +2
    expected = Some 72
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex3 = verify do
  labeled "Can find the largest product of 2" do
    digits = "576802143"
    span = +2
    expected = Some 48
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex4 = verify do
  labeled "Can find the largest product of 3 with numbers in order" do
    digits = "0123456789"
    span = +3
    expected = Some 504
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex5 = verify do
  labeled "Can find the largest product of 3" do
    digits = "1027839564"
    span = +3
    expected = Some 270
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex6 = verify do
  labeled "Can find the largest product of 5 with numbers in order" do
    digits = "0123456789"
    span = +5
    expected = Some 15120
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex7 = verify do
  labeled "Can get the largest product of a big number" do
    digits = "73167176531330624919225119674426574742355349194934"
    span = +6
    expected = Some 23520
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex8 = verify do
  labeled "Reports zero if the only digits are zero" do
    digits = "0000"
    span = +2
    expected = Some 0
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex9 = verify do
  labeled "Reports zero if all spans include zero" do
    digits = "99099"
    span = +3
    expected = Some 0
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex10 = verify do
  labeled "Rejects span longer than string length" do
    digits = "123"
    span = +4
    expected = None
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex11 = verify do
  labeled "Reports 1 for empty string and empty product (0 span)" do
    digits = ""
    span = +0
    expected = Some 1
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex12 = verify do
  labeled "Reports 1 for nonempty string and empty product (0 span)" do
    digits = "123"
    span = +0
    expected = Some 1
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex13 = verify do
  labeled "Rejects empty string and nonzero span" do
    digits = ""
    span = +1
    expected = None
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex14 = verify do
  labeled "Rejects invalid character in digits" do
    digits = "1234a5"
    span = +2
    expected = None
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

largestSeriesProduct.test.ex15 = verify do
  labeled "Rejects negative span" do
    digits = "12345"
    span = -1
    expected = None
    actual = largestProduct digits span
    label "expected" expected
    label "actual" actual
    ensureEqual expected actual

test> largestSeriesProduct.tests = join [
	largestSeriesProduct.test.ex1,
	largestSeriesProduct.test.ex2,
	largestSeriesProduct.test.ex3,
	largestSeriesProduct.test.ex4,
	largestSeriesProduct.test.ex5,
	largestSeriesProduct.test.ex6,
	largestSeriesProduct.test.ex7,
	largestSeriesProduct.test.ex8,
	largestSeriesProduct.test.ex9,
	largestSeriesProduct.test.ex10,
	largestSeriesProduct.test.ex11,
	largestSeriesProduct.test.ex12,
	largestSeriesProduct.test.ex13,
	largestSeriesProduct.test.ex14,
	largestSeriesProduct.test.ex15
]
