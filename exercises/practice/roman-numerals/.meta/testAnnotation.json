[
  {
    "name": "1 is I",
    "test_code": "let\n  Test.label.deprecated \"1 is I\" <| Test.expect (toRoman 1 === \"I\")"
  },
  {
    "name": "2 is II",
    "test_code": "let\n  Test.label.deprecated \"2 is II\" <| Test.expect (toRoman 2 === \"II\")"
  },
  {
    "name": "3 is III",
    "test_code": "let\n  Test.label.deprecated \"3 is III\" <| Test.expect (toRoman 3 === \"III\")"
  },
  {
    "name": "4 is IV",
    "test_code": "let\n  Test.label.deprecated \"4 is IV\" <| Test.expect (toRoman 4 === \"IV\")"
  },
  {
    "name": "5 is V",
    "test_code": "let\n  Test.label.deprecated \"5 is V\" <| Test.expect (toRoman 5 === \"V\")"
  },
  {
    "name": "6 is VI",
    "test_code": "let\n  Test.label.deprecated \"6 is VI\" <| Test.expect (toRoman 6 === \"VI\")"
  },
  {
    "name": "9 is IX",
    "test_code": "let\n  Test.label.deprecated \"9 is IX\" <| Test.expect (toRoman 9 === \"IX\")"
  },
  {
    "name": "27 is XXVII",
    "test_code": "let\n  Test.label.deprecated \"27 is XXVII\" <| Test.expect (toRoman 27 === \"XXVII\")"
  },
  {
    "name": "48 is XLVIII",
    "test_code": "let\n  Test.label.deprecated \"48 is XLVIII\" <| Test.expect (toRoman 48 === \"XLVIII\")"
  },
  {
    "name": "49 is XLIX",
    "test_code": "let\n  Test.label.deprecated \"49 is XLIX\" <| Test.expect (toRoman 49 === \"XLIX\")"
  },
  {
    "name": "59 is LIX",
    "test_code": "let\n  Test.label.deprecated \"59 is LIX\" <| Test.expect (toRoman 59 === \"LIX\")"
  },
  {
    "name": "93 is XCIII",
    "test_code": "let\n  Test.label.deprecated \"93 is XCIII\" <| Test.expect (toRoman 93 === \"XCIII\")"
  },
  {
    "name": "141 is CXLI",
    "test_code": "let\n  Test.label.deprecated \"141 is CXLI\" <| Test.expect (toRoman 141 === \"CXLI\")"
  },
  {
    "name": "163 is CLXIII",
    "test_code": "let\n  Test.label.deprecated \"163 is CLXIII\" <| Test.expect (toRoman 163 === \"CLXIII\")"
  },
  {
    "name": "402 is CDII",
    "test_code": "let\n  Test.label.deprecated \"402 is CDII\" <| Test.expect (toRoman 402 === \"CDII\")"
  },
  {
    "name": "575 is DLXXV",
    "test_code": "let\n  Test.label.deprecated \"575 is DLXXV\" <| Test.expect (toRoman 575 === \"DLXXV\")"
  },
  {
    "name": "911 is CMXI",
    "test_code": "let\n  Test.label.deprecated \"911 is CMXI\" <| Test.expect (toRoman 911 === \"CMXI\")"
  },
  {
    "name": "1024 is MXXIV",
    "test_code": "let\n  Test.label.deprecated \"1024 is MXXIV\" <| Test.expect (toRoman 1024 === \"MXXIV\")"
  },
  {
    "name": "3000 is MMM",
    "test_code": "let\n  Test.label.deprecated \"3000 is MMM\" <| Test.expect (toRoman 3000 === \"MMM\")"
  },
  {
    "name": "16 is XVI",
    "test_code": "let\n  Test.label.deprecated \"16 is XVI\" <| Test.expect (toRoman 16 === \"XVI\")"
  },
  {
    "name": "66 is LXVI",
    "test_code": "let\n  Test.label.deprecated \"66 is LXVI\" <| Test.expect (toRoman 66 === \"LXVI\")"
  },
  {
    "name": "166 is CLXVI",
    "test_code": "let\n  Test.label.deprecated \"166 is CLXVI\" <| Test.expect (toRoman 166 === \"CLXVI\")"
  },
  {
    "name": "666 is DCLXVI",
    "test_code": "let\n  Test.label.deprecated \"666 is DCLXVI\" <| Test.expect (toRoman 666 === \"DCLXVI\")"
  },
  {
    "name": "1666 is MDCLXVI",
    "test_code": "let\n  Test.label.deprecated \"1666 is MDCLXVI\" <| Test.expect (toRoman 1666 === \"MDCLXVI\")"
  },
  {
    "name": "3001 is MMMI",
    "test_code": "let\n  Test.label.deprecated \"3001 is MMMI\" <| Test.expect (toRoman 3001 === \"MMMI\")"
  },
  {
    "name": "3999 is MMMCMXCIX",
    "test_code": "let\n  Test.label.deprecated \"3999 is MMMCMXCIX\" <| Test.expect (toRoman 3999 === \"MMMCMXCIX\")"
  }
]