[
  {
    "test_code": "romanNumerals.test.ex1 = let\n  Test.label \"1 is I\" <| Test.expect (toRoman 1 === \"I\")",
    "name": "romanNumerals.test.ex1"
  },
  {
    "test_code": "romanNumerals.test.ex2 = let\n  Test.label \"2 is II\" <| Test.expect (toRoman 2 === \"II\")",
    "name": "romanNumerals.test.ex2"
  },
  {
    "test_code": "romanNumerals.test.ex3 = let\n  Test.label \"3 is III\" <| Test.expect (toRoman 3 === \"III\")",
    "name": "romanNumerals.test.ex3"
  },
  {
    "test_code": "romanNumerals.test.ex4 = let\n  Test.label \"4 is IV\" <| Test.expect (toRoman 4 === \"IV\")",
    "name": "romanNumerals.test.ex4"
  },
  {
    "test_code": "romanNumerals.test.ex5 = let\n  Test.label \"5 is V\" <| Test.expect (toRoman 5 === \"V\")",
    "name": "romanNumerals.test.ex5"
  },
  {
    "test_code": "romanNumerals.test.ex6 = let\n  Test.label \"6 is VI\" <| Test.expect (toRoman 6 === \"VI\")",
    "name": "romanNumerals.test.ex6"
  },
  {
    "test_code": "romanNumerals.test.ex7 = let\n  Test.label \"9 is IX\" <| Test.expect (toRoman 9 === \"IX\")",
    "name": "romanNumerals.test.ex7"
  },
  {
    "test_code": "romanNumerals.test.ex8 = let\n  Test.label \"27 is XXVII\" <| Test.expect (toRoman 27 === \"XXVII\")",
    "name": "romanNumerals.test.ex8"
  },
  {
    "test_code": "romanNumerals.test.ex9 = let\n  Test.label \"48 is XLVIII\" <| Test.expect (toRoman 48 === \"XLVIII\")",
    "name": "romanNumerals.test.ex9"
  },
  {
    "test_code": "romanNumerals.test.ex10 = let\n  Test.label \"49 is XLIX\" <| Test.expect (toRoman 49 === \"XLIX\")",
    "name": "romanNumerals.test.ex10"
  },
  {
    "test_code": "romanNumerals.test.ex11 = let\n  Test.label \"59 is LIX\" <| Test.expect (toRoman 59 === \"LIX\")",
    "name": "romanNumerals.test.ex11"
  },
  {
    "test_code": "romanNumerals.test.ex12 = let\n  Test.label \"93 is XCIII\" <| Test.expect (toRoman 93 === \"XCIII\")",
    "name": "romanNumerals.test.ex12"
  },
  {
    "test_code": "romanNumerals.test.ex13 = let\n  Test.label \"141 is CXLI\" <| Test.expect (toRoman 141 === \"CXLI\")",
    "name": "romanNumerals.test.ex13"
  },
  {
    "test_code": "romanNumerals.test.ex14 = let\n  Test.label \"163 is CLXIII\" <| Test.expect (toRoman 163 === \"CLXIII\")",
    "name": "romanNumerals.test.ex14"
  },
  {
    "test_code": "romanNumerals.test.ex15 = let\n  Test.label \"402 is CDII\" <| Test.expect (toRoman 402 === \"CDII\")",
    "name": "romanNumerals.test.ex15"
  },
  {
    "test_code": "romanNumerals.test.ex16 = let\n  Test.label \"575 is DLXXV\" <| Test.expect (toRoman 575 === \"DLXXV\")",
    "name": "romanNumerals.test.ex16"
  },
  {
    "test_code": "romanNumerals.test.ex17 = let\n  Test.label \"911 is CMXI\" <| Test.expect (toRoman 911 === \"CMXI\")",
    "name": "romanNumerals.test.ex17"
  },
  {
    "test_code": "romanNumerals.test.ex18 = let\n  Test.label \"1024 is MXXIV\" <| Test.expect (toRoman 1024 === \"MXXIV\")",
    "name": "romanNumerals.test.ex18"
  },
  {
    "test_code": "romanNumerals.test.ex19 = let\n  Test.label \"3000 is MMM\" <| Test.expect (toRoman 3000 === \"MMM\")",
    "name": "romanNumerals.test.ex19"
  },
  {
    "test_code": "romanNumerals.test.ex20 = let\n  Test.label \"16 is XVI\" <| Test.expect (toRoman 16 === \"XVI\")",
    "name": "romanNumerals.test.ex20"
  },
  {
    "test_code": "romanNumerals.test.ex21 = let\n  Test.label \"66 is LXVI\" <| Test.expect (toRoman 66 === \"LXVI\")",
    "name": "romanNumerals.test.ex21"
  },
  {
    "test_code": "romanNumerals.test.ex22 = let\n  Test.label \"166 is CLXVI\" <| Test.expect (toRoman 166 === \"CLXVI\")",
    "name": "romanNumerals.test.ex22"
  },
  {
    "test_code": "romanNumerals.test.ex23 = let\n  Test.label \"666 is DCLXVI\" <| Test.expect (toRoman 666 === \"DCLXVI\")",
    "name": "romanNumerals.test.ex23"
  },
  {
    "test_code": "romanNumerals.test.ex24 = let\n  Test.label \"1666 is MDCLXVI\" <| Test.expect (toRoman 1666 === \"MDCLXVI\")",
    "name": "romanNumerals.test.ex24"
  },
  {
    "test_code": "romanNumerals.test.ex25 = let\n  Test.label \"3001 is MMMI\" <| Test.expect (toRoman 3001 === \"MMMI\")",
    "name": "romanNumerals.test.ex25"
  },
  {
    "test_code": "romanNumerals.test.ex26 = let\n  Test.label \"3999 is MMMCMXCIX\" <| Test.expect (toRoman 3999 === \"MMMCMXCIX\")",
    "name": "romanNumerals.test.ex26"
  }
]
